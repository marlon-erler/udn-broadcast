/* BASE */
.window-manager {
  position: relative;

  width: 100%;
  height: 100%;

  display: block;
  flex: 1;

  overflow: hidden;
}

.window {
  position: absolute;
  overflow: visible;
}

.window[maximized] {
  top: 0px !important;
  left: 0px !important;

  width: 100% !important;
  height: 100% !important;
}

/* STYLE */
@keyframes window {
  0% {
    opacity: 0;
    transform: scale(0.95);
  }
}

:root {
  --title-bar-height: 24px;
  --window-button-size: calc(
    var(--title-bar-height) - 2 * var(--gap-in-control-row)
  );
  --window-button-icon-size: 0.8rem;
}

.window {
  display: flex;
  flex-direction: column;

  animation: window var(--animation-duration);
  transition: opacity var(--animation-duration),
    transform var(--animation-duration);

  border: var(--border-width) solid var(--overlay-border-color);
  box-shadow: var(--overlay-shadow);

  backdrop-filter: blur(var(--overlay-backdrop-blur));
  border-radius: var(--overlay-corner-radius);
}

.window[closing] {
  opacity: 0;
  transform: scale(0.95);
}

.window > * {
  position: absolute;
  left: 0px;
  right: 0px;
}

.window .background {
  top: 0px;
  bottom: 0px;

  background: var(--overlay-background);
}

.window .titlebar {
  display: flex;

  top: 0px;
  height: var(--title-bar-height);
}

.window .titlebar .button-row {
  display: flex;
  height: 100%;

  padding: var(--gap-in-control-row);
  gap: var(--gap-in-control-row);
}

.window .content-wrapper {
  display: flex;

  top: var(--title-bar-height);
  bottom: 0px;

  padding: var(--gap-in-control-row);
  padding-top: 0px;
}

.window main {
  background: var(--base-background);
  border-radius: var(--overlay-corner-radius);
  border: var(--border-width) solid var(--standard-border-color);

  padding: var(--content-padding);

  width: 100%;
  height: 100%;
}

.window[maximized],
.window[maximized] main {
  border-radius: 0px;
  border: none;
}

.window[maximized] .background {
  background: var(--base-background);
}

.window[maximized] .content-wrapper {
  padding: 0px;
}

.window:not([focused]) .background {
  opacity: 0.3;
}

.window:not([focused]) .dragger {
  opacity: 0.6;
}

/* buttons */
.window .titlebar .button-row button {
  height: var(--window-button-size);
  width: var(--window-button-size);

  padding: 0px;
  justify-content: center;
}

.window .titlebar .button-row button .icon {
  font-size: var(--window-button-icon-size);
}

.window .titlebar .unmaximize-button {
  display: none;
}

.window[maximized] .titlebar .maximize-button {
  display: none;
}

.window[maximized] .titlebar .unmaximize-button {
  display: flex;
}

/* HANDLES */
.window .titlebar .dragger {
  display: flex;
  align-items: center;

  padding: 0px 4px;

  flex: 1;
  width: 100%;
  height: 100%;

  font-size: var(--control-font-size);
  cursor: default;
}

.window .left-resize-handle,
.window .right-resize-handle,
.window .top-resize-handle,
.window .bottom-resize-handle,
.window .top-left-resize-handle,
.window .top-right-resize-handle,
.window .bottom-left-resize-handle,
.window .bottom-right-resize-handle {
  position: absolute;

  --size: 5px;
  --distance: -5px;

  width: var(--size);
  height: var(--size);
}

.window .left-resize-handle,
.window .right-resize-handle {
  top: var(--distance);
  bottom: var(--distance);
  height: unset;

  cursor: ew-resize !important;
}

.window .left-resize-handle {
  left: var(--distance);
}

.window .right-resize-handle {
  left: unset;
  right: var(--distance);
}

.window .top-resize-handle,
.window .bottom-resize-handle {
  left: var(--distance);
  right: var(--distance);
  width: unset;

  cursor: ns-resize !important;
}

.window .top-resize-handle {
  top: var(--distance);
}

.window .bottom-resize-handle {
  bottom: var(--distance);
}

.window .top-left-resize-handle {
  top: var(--distance);
  left: var(--distance);
}
.window .top-right-resize-handle {
  top: var(--distance);
  left: unset;
  right: var(--distance);
}
.window .bottom-left-resize-handle {
  bottom: var(--distance);
  left: var(--distance);
}
.window .bottom-right-resize-handle {
  bottom: var(--distance);
  left: unset;
  right: var(--distance);
}
